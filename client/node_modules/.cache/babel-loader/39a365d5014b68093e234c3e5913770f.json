{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\aivar\\\\OneDrive\\\\Dators\\\\React\\\\crown-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\aivar\\\\OneDrive\\\\Dators\\\\React\\\\crown-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  cconst[(userCredentials, setUserCredentials)] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const _userCredentials = userCredentials,\n        displayName = _userCredentials.displayName,\n        email = _userCredentials.email,\n        password = _userCredentials.password,\n        confirmPassword = _userCredentials.confirmPassword;\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Passwords does not match!');\n      return;\n    }\n\n    signUpStart(displayName, email, password);\n    this.setState({\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n  };\n\n  handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/aivar/OneDrive/Dators/React/crown-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","cconst","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","setState","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  cconst [userCredentials, setUserCredentials] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('Passwords does not match!');\r\n      return;\r\n    }\r\n\r\n    signUpStart(displayName, email, password);\r\n\r\n    this.setState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      });\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setUserCredentials({ ...userCredentials, [name]: value });\r\n  }\r\n\r\n  return (\r\n    <div className='sign-up'>\r\n      <h2 className='title'>I do not have an account</h2>\r\n      <span>Sign up with your email and password</span>\r\n      <form className='sign-up-form' onSubmit={this.handleSubmit}>\r\n        <FormInput\r\n          type='text'\r\n          name='displayName'\r\n          value={displayName}\r\n          onChange={this.handleChange}\r\n          label='Display Name'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='email'\r\n          name='email'\r\n          value={email}\r\n          onChange={this.handleChange}\r\n          label='Email'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='password'\r\n          value={password}\r\n          onChange={this.handleChange}\r\n          label='Password'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='confirmPassword'\r\n          value={confirmPassword}\r\n          onChange={this.handleChange}\r\n          label='Confirm Password'\r\n          required\r\n        />\r\n        <CustomButton type='submit'>Sign Up</CustomButton>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: (displayName, email, password) =>\r\n    dispatch(signUpStart({\r\n      displayName,\r\n      email,\r\n      password\r\n    }))\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}