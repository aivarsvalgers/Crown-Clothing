{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.types';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionAsync() {\n  yield console.log('Hi Hello!');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshop = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n;\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}\n;","map":{"version":3,"sources":["C:/Users/aivar/OneDrive/Dators/React/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionAsync","console","log","collectionRef","collection","snapshop","get","collectionsMap","snapshot","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,cAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCY,QAAlC,CAAjC;AACA,UAAMd,GAAG,CAACG,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACI,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACF;AAAA;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMnB,SAAS,CACbO,eAAe,CAACa,uBADH,EAEbZ,oBAFa,CAAf;AAID;AAAA","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.types';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionAsync() {\r\n  yield console.log('Hi Hello!');\r\n\r\n  try {\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapshop = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n    yield put(fetchCollectionsSuccess(collectionsMap));\r\n  } catch (error) {\r\n      yield put(fetchCollectionsFailure(error.message));\r\n  }\r\n};\r\n\r\nexport function* fetchCollectionStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionAsync\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}